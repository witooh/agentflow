name: CI

on:
  push:
    branches: ["**"]
    tags: ["v*"]
  pull_request:
    branches: ["**"]

permissions:
  contents: read

jobs:
  build-and-test:
    name: Build and Test (Go ${{ matrix.go }} on ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest]
        go: ['1.22']
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
          check-latest: true

      - name: Go env
        run: |
          go version
          go env
        shell: bash

      - name: Download deps
        run: go mod download
        shell: bash

      - name: Build (sanity)
        run: go build ./...
        shell: bash

      - name: Run tests with coverage
        run: go test ./... -coverprofile=coverage.out -covermode=atomic
        shell: bash

      - name: Coverage summary
        run: go tool cover -func=coverage.out | tee coverage.txt
        shell: bash

      - name: Build CLI release binary
        run: |
          ./scripts/build_cli.sh --current
          mkdir -p artifacts
          cp dist/agentflow artifacts/agentflow-macos
          # Validate the binary was built successfully
          if [ ! -f "artifacts/agentflow-macos" ]; then
            echo "Error: agentflow binary not found after build"
            exit 1
          fi
          # Show binary info for verification
          file artifacts/agentflow-macos
          ls -la artifacts/agentflow-macos
        shell: bash

      - name: Upload release artifact
        uses: actions/upload-artifact@v4
        with:
          name: agentflow-${{ github.ref_name || 'latest' }}-macos
          path: artifacts/agentflow-macos
          if-no-files-found: error

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.os }}
          path: |
            coverage.out
            coverage.txt
          if-no-files-found: error

      - name: Upload junit/test logs (optional)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-logs-${{ matrix.os }}
          path: |
            **/*.test
          if-no-files-found: ignore

  release:
    name: Publish Release
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: agentflow-${{ github.ref_name }}-macos
          path: artifacts
          merge-multiple: false

      - name: Validate downloaded artifacts
        run: |
          if [ ! -f "artifacts/agentflow-macos" ]; then
            echo "Error: agentflow-macos binary not found in downloaded artifacts"
            echo "Available files:"
            find artifacts -type f -exec ls -la {} \;
            exit 1
          fi
          echo "Binary validation successful:"
          file artifacts/agentflow-macos
          ls -la artifacts/agentflow-macos
        shell: bash

      - name: Prepare release assets
        run: |
          mkdir -p release
          cp artifacts/agentflow-macos release/agentflow-${{ github.ref_name }}-macos
          echo "Release assets prepared:"
          ls -la release/
        shell: bash

      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Agentflow ${{ github.ref_name }}
          files: release/agentflow-${{ github.ref_name }}-macos
          generate_release_notes: true
